{"version":3,"sources":["utils/nanoid.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/App/App.styled.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contacts/contacts-actions.js","components/App/App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["nanoid","customAlphabet","FormEl","Input","TitleInput","Button","Form","data","onSubmit","useState","name","setName","number","setNumber","reset","checkContact","contacts","obj","normalizedName","toLowerCase","find","contact","includes","e","preventDefault","id","compare","alert","type","value","pattern","onChange","currentTarget","title","required","Container","TitleMain","TitleBook","List","Item","ButtonDel","ContactsList","onDeleteContact","map","onClick","Label","Filter","addContact","createAction","deleteContact","addFilterValue","App","useSelector","state","items","filter","dispatch","useDispatch","actions","normalizedFilter","getVisibleContacts","contactId","createReducer","action","payload","item","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.add5a0b0.chunk.js","sourcesContent":["import { customAlphabet } from 'nanoid';\nconst nanoid = customAlphabet('1234567890', 3);\nexport default nanoid;\n","import styled from '@emotion/styled/macro';\n\nexport const FormEl = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n  margin-right: 5px;\n  line-height: 10px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n    border-color: blue;\n  }\n`;\n\nexport const TitleInput = styled.h2``;\n\nexport const Button = styled.button`\n  margin-left: 5px;\n  background-color: white;\n  color: green;\n  outline: none;\n  border: 1px dashed green;\n  padding: 3px;\n  &:hover,\n  :focus {\n    background-color: blue;\n    border: 1px dashed blue;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport nanoid from '../../utils/nanoid.js';\nimport { FormEl, Input, TitleInput, Button, } from './Form.styled.js';\n\nexport default function Form({ data, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const obj = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const compare = checkContact(data, obj);\n\n    if (compare) {\n      alert(`${compare.name} is already in contacts`)\n      return reset();\n    }\n    onSubmit(obj);\n    reset();\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n  const checkContact = (contacts, obj) => {\n    const { name } = obj;\n    const normalizedName = name.toLowerCase();\n    return contacts.find(contact => contact.name.toLowerCase().includes(normalizedName))\n  }\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <TitleInput>Name</TitleInput>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={(e) => setName(e.currentTarget.value)}\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <TitleInput>Number</TitleInput>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        onChange={(e) => setNumber(e.currentTarget.value)}\n        value={number}\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </FormEl>\n  )\n}\n\n\n\n\n\n\n\n\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TitleMain = styled.h1`\n  margin-bottom: 15px;\n`;\n\nexport const TitleBook = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 12px;\n  padding: 10px;\n  border: 1px solid green;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ButtonDel = styled.button`\n  margin-left: 5px;\n  background-color: white;\n  color: red;\n  outline: none;\n  border: 1px dashed red;\n  &:hover,\n  :focus {\n    background-color: blue;\n    border: 1px dashed blue;\n    color: white;\n  }\n`;\n","import React from 'react';\nimport { List, Item, ButtonDel } from './ContactsList.styled.js'\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <Item key={id} >{name}: {number}\n                    <ButtonDel type=\"button\" onClick={() => onDeleteContact(id)}>Delete</ButtonDel>\n                </Item>\n            ))}\n        </List>\n    )\n}\n\nexport default ContactsList\n","import styled from '@emotion/styled/macro';\n\nexport const Input = styled.input`\n  line-height: 10px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n    border-color: blue;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 12px;\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled.js';\n\nconst Filter = ({ onChange, value }) => {\n  return (\n    <Label>\n            Find Your Contact =>\n      <Input type=\"text\"  value={value} onChange={onChange} />\n    </Label>\n  )\n}\n\nexport default Filter\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/Save');\n// export const addContact = obj => ({\n//   type: 'contacts/Save',\n//   payload: obj,\n// });\n\nexport const deleteContact = createAction('contacts/Delete');\n// export const deleteContact = contactId => ({\n//   type: 'contacts/Delete',\n//   payload: contactId,\n// });\nexport const addFilterValue = createAction('contacts/Filter');\n// export const addFilterValue = value => ({\n//   type: 'contacts/Filter',\n//   payload: value,\n// });\n","// import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from '../Form/Form';\nimport { Container, TitleMain, TitleBook, } from './App.styled.js'\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\nimport * as actions from 'redux/contacts/contacts-actions';\n\n\nexport default function App() {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  return (\n    <Container>\n      <TitleMain>Phonebook</TitleMain>\n      <Form onSubmit={(obj)=> dispatch(actions.addContact(obj))} data={contacts} />\n      <TitleBook>Contacts</TitleBook>\n      <Filter onChange={(e) => dispatch(actions.addFilterValue(e.currentTarget.value))} value={filter} />\n      <ContactsList contacts={getVisibleContacts(contacts)} onDeleteContact={(contactId)=>dispatch(actions.deleteContact(contactId))} />\n    </Container>\n  )\n}\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items,\n//   filter: state.contacts.filter,\n// })\n\n// const mapDispatchToProps = dispatch => ({\n//   addContact: (obj) => dispatch(actions.addContact(obj)),\n//   deleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\n//   addFilterValue: (value) => dispatch(actions.addFilterValue(value)),\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n\n\n\n\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, addFilterValue } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(item => item.id !== action.payload),\n});\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(item => item.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\nconst filter = createReducer('', {\n  [addFilterValue]: (_, action) => action.payload,\n});\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  persistReducer,\n  persistStore,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from 'redux/contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'Contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n\n// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const store = createStore(rootReducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport './utils/nanoid.js';\nimport { store, persistor } from './redux/store.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<h1>Loading...</h1>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}